/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// HoldMoneyRequest : Hold money request.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HoldMoneyRequest {
    /// Predefined transaction id. Random if empty.
    #[serde(
        rename = "transactionId",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub transaction_id: Option<Option<uuid::Uuid>>,
    /// Customer id.
    #[serde(rename = "customerId")]
    pub customer_id: uuid::Uuid,
    /// Wallet id.
    #[serde(rename = "walletId")]
    pub wallet_id: uuid::Uuid,
    /// Sum.
    #[serde(rename = "sum")]
    pub sum: f64,
    /// Additional information about holding. Can be null.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// Organization id.
    #[serde(rename = "organizationId")]
    pub organization_id: uuid::Uuid,
}

impl HoldMoneyRequest {
    /// Hold money request.
    pub fn new(
        customer_id: uuid::Uuid,
        wallet_id: uuid::Uuid,
        sum: f64,
        organization_id: uuid::Uuid,
    ) -> HoldMoneyRequest {
        HoldMoneyRequest {
            transaction_id: None,
            customer_id,
            wallet_id,
            sum,
            comment: None,
            organization_id,
        }
    }
}
