/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChangeUserBalanceRequest : Change user balance request.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChangeUserBalanceRequest {
    /// Customer id.
    #[serde(rename = "customerId", skip_serializing_if = "Option::is_none")]
    pub customer_id: Option<uuid::Uuid>,
    /// Wallet id.
    #[serde(rename = "walletId", skip_serializing_if = "Option::is_none")]
    pub wallet_id: Option<uuid::Uuid>,
    /// Sum of balance change. Must be possible.
    #[serde(rename = "sum", skip_serializing_if = "Option::is_none")]
    pub sum: Option<f64>,
    /// Comment. Can be null.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// Organization id.
    #[serde(rename = "organizationId")]
    pub organization_id: uuid::Uuid,
}

impl ChangeUserBalanceRequest {
    /// Change user balance request.
    pub fn new(organization_id: uuid::Uuid) -> ChangeUserBalanceRequest {
        ChangeUserBalanceRequest {
            customer_id: None,
            wallet_id: None,
            sum: None,
            comment: None,
            organization_id,
        }
    }
}
