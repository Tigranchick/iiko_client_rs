/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderAddress : Address details.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderAddress {
    /// Street.
    #[serde(
        rename = "street",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub street: Option<Option<Box<models::OrderStreet>>>,
    /// Postcode.
    #[serde(
        rename = "index",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub index: Option<Option<String>>,
    /// House.
    #[serde(
        rename = "house",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub house: Option<Option<String>>,
    /// Building.
    #[serde(
        rename = "building",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub building: Option<Option<String>>,
    /// Apartment.
    #[serde(
        rename = "flat",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub flat: Option<Option<String>>,
    /// Entrance.
    #[serde(
        rename = "entrance",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub entrance: Option<Option<String>>,
    /// Floor.
    #[serde(
        rename = "floor",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub floor: Option<Option<String>>,
    /// Intercom.
    #[serde(
        rename = "doorphone",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub doorphone: Option<Option<String>>,
    /// Region
    #[serde(rename = "region", deserialize_with = "Option::deserialize")]
    pub region: Option<Box<models::OrderRegion>>,
    /// Address line 1.  Contains the primary address information.
    #[serde(
        rename = "line1",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub line1: Option<Option<String>>,
}

impl OrderAddress {
    /// Address details.
    pub fn new(region: Option<models::OrderRegion>) -> OrderAddress {
        OrderAddress {
            street: None,
            index: None,
            house: None,
            building: None,
            flat: None,
            entrance: None,
            floor: None,
            doorphone: None,
            region: if let Some(x) = region {
                Some(Box::new(x))
            } else {
                None
            },
            line1: None,
        }
    }
}
