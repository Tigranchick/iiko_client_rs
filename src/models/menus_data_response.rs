/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MenusDataResponse : Response with stock lists.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MenusDataResponse {
    /// Operation ID.
    #[serde(rename = "correlationId")]
    pub correlation_id: uuid::Uuid,
    /// External menu.
    #[serde(
        rename = "externalMenus",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub external_menus: Option<Option<Vec<models::ExternalMenu>>>,
    /// Price category.
    #[serde(
        rename = "priceCategories",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub price_categories: Option<Option<Vec<models::PriceCategory>>>,
}

impl MenusDataResponse {
    /// Response with stock lists.
    pub fn new(correlation_id: uuid::Uuid) -> MenusDataResponse {
        MenusDataResponse {
            correlation_id,
            external_menus: None,
            price_categories: None,
        }
    }
}
