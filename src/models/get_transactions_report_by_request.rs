/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetTransactionsReportByRequest : Report request.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTransactionsReportByRequest {
    /// Customer id.
    #[serde(rename = "customerId")]
    pub customer_id: uuid::Uuid,
    /// Report since date in UTC. Included.
    #[serde(rename = "dateFrom")]
    pub date_from: String,
    /// Report till date in UTC. Included.
    #[serde(rename = "dateTo")]
    pub date_to: String,
    /// Page number. Zero based. Previous pages will be skipped.
    #[serde(rename = "pageNumber")]
    pub page_number: i32,
    /// Page size. Ignored if more than max page size on server.
    #[serde(rename = "pageSize")]
    pub page_size: i32,
    /// Organization id.
    #[serde(rename = "organizationId")]
    pub organization_id: uuid::Uuid,
}

impl GetTransactionsReportByRequest {
    /// Report request.
    pub fn new(
        customer_id: uuid::Uuid,
        date_from: String,
        date_to: String,
        page_number: i32,
        page_size: i32,
        organization_id: uuid::Uuid,
    ) -> GetTransactionsReportByRequest {
        GetTransactionsReportByRequest {
            customer_id,
            date_from,
            date_to,
            page_number,
            page_size,
            organization_id,
        }
    }
}
