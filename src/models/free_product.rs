/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FreeProduct : Free item to be added to order.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FreeProduct {
    /// Id of product.
    #[serde(
        rename = "id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub id: Option<Option<uuid::Uuid>>,
    /// Code of product. Can be null.
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<String>,
    /// Sizes available for that product.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<Vec<String>>,
    /// Sizes with IDs available for that product.
    #[serde(rename = "sizes", skip_serializing_if = "Option::is_none")]
    pub sizes: Option<Vec<models::FreeProductSize>>,
}

impl FreeProduct {
    /// Free item to be added to order.
    pub fn new() -> FreeProduct {
        FreeProduct {
            id: None,
            code: None,
            size: None,
            sizes: None,
        }
    }
}
