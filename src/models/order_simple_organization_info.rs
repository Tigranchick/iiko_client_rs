/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderSimpleOrganizationInfo : Organization details.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderSimpleOrganizationInfo {
    #[serde(rename = "responseType")]
    pub response_type: String,
    /// Organization ID.                Can be obtained by `/api/1/organizations` operation.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Organization name.
    #[serde(rename = "name", deserialize_with = "Option::deserialize")]
    pub name: Option<String>,
    /// Organization`s code.
    #[serde(
        rename = "code",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub code: Option<Option<String>>,
    /// Organization`s external data.
    #[serde(
        rename = "externalData",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub external_data: Option<Option<Vec<models::ExternalData>>>,
}

impl OrderSimpleOrganizationInfo {
    /// Organization details.
    pub fn new(
        response_type: String,
        id: uuid::Uuid,
        name: Option<String>,
    ) -> OrderSimpleOrganizationInfo {
        OrderSimpleOrganizationInfo {
            response_type,
            id,
            name,
            code: None,
            external_data: None,
        }
    }
}
