/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DeliveryAttentionNotificationRequest : Request to notify external systems (iikoFront and iikoWeb) about a delivery requiring attention.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeliveryAttentionNotificationRequest {
    /// Order source.
    #[serde(rename = "orderSource")]
    pub order_source: String,
    /// Order ID.
    #[serde(rename = "orderId")]
    pub order_id: uuid::Uuid,
    /// Additional info about the problem.
    #[serde(rename = "additionalInfo")]
    pub additional_info: String,
    /// Organization UOC Id.
    #[serde(rename = "organizationId")]
    pub organization_id: uuid::Uuid,
}

impl DeliveryAttentionNotificationRequest {
    /// Request to notify external systems (iikoFront and iikoWeb) about a delivery requiring attention.
    pub fn new(
        order_source: String,
        order_id: uuid::Uuid,
        additional_info: String,
        organization_id: uuid::Uuid,
    ) -> DeliveryAttentionNotificationRequest {
        DeliveryAttentionNotificationRequest {
            order_source,
            order_id,
            additional_info,
            organization_id,
        }
    }
}
