/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

use serde_repr::{Deserialize_repr, Serialize_repr};
///
#[repr(i64)]
#[derive(
    Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize_repr, Deserialize_repr,
)]
pub enum TransactionType {
    Variant0 = 0,
    Variant1 = 1,
    Variant2 = 2,
    Variant3 = 3,
    Variant4 = 4,
    Variant5 = 5,
    Variant6 = 6,
    Variant7 = 7,
    Variant8 = 8,
    Variant9 = 9,
    Variant10 = 10,
    Variant11 = 11,
    Variant12 = 12,
    Variant13 = 13,
    Variant14 = 14,
    Variant15 = 15,
    Variant16 = 16,
    Variant17 = 17,
    Variant18 = 18,
    Variant20 = 20,
    Variant21 = 21,
    Variant22 = 22,
    Variant23 = 23,
    Variant24 = 24,
    Variant25 = 25,
    Variant26 = 26,
    Variant28 = 28,
    Variant29 = 29,
    Variant30 = 30,
    Variant32 = 32,
    Variant35 = 35,
    Variant36 = 36,
    Variant37 = 37,
    Variant38 = 38,
    Variant39 = 39,
    Variant40 = 40,
    Variant41 = 41,
    Variant42 = 42,
    Variant43 = 43,
    Variant44 = 44,
    Variant45 = 45,
    Variant46 = 46,
    Variant47 = 47,
    Variant48 = 48,
    Variant49 = 49,
    Variant50 = 50,
    Variant51 = 51,
    Variant52 = 52,
    Variant53 = 53,
    Variant54 = 54,
    Variant55 = 55,
    Variant56 = 56,
    Variant57 = 57,
    Variant58 = 58,
    Variant59 = 59,
    Variant60 = 60,
}

impl std::fmt::Display for TransactionType {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        write!(
            f,
            "{}",
            match self {
                Self::Variant0 => "0",
                Self::Variant1 => "1",
                Self::Variant2 => "2",
                Self::Variant3 => "3",
                Self::Variant4 => "4",
                Self::Variant5 => "5",
                Self::Variant6 => "6",
                Self::Variant7 => "7",
                Self::Variant8 => "8",
                Self::Variant9 => "9",
                Self::Variant10 => "10",
                Self::Variant11 => "11",
                Self::Variant12 => "12",
                Self::Variant13 => "13",
                Self::Variant14 => "14",
                Self::Variant15 => "15",
                Self::Variant16 => "16",
                Self::Variant17 => "17",
                Self::Variant18 => "18",
                Self::Variant20 => "20",
                Self::Variant21 => "21",
                Self::Variant22 => "22",
                Self::Variant23 => "23",
                Self::Variant24 => "24",
                Self::Variant25 => "25",
                Self::Variant26 => "26",
                Self::Variant28 => "28",
                Self::Variant29 => "29",
                Self::Variant30 => "30",
                Self::Variant32 => "32",
                Self::Variant35 => "35",
                Self::Variant36 => "36",
                Self::Variant37 => "37",
                Self::Variant38 => "38",
                Self::Variant39 => "39",
                Self::Variant40 => "40",
                Self::Variant41 => "41",
                Self::Variant42 => "42",
                Self::Variant43 => "43",
                Self::Variant44 => "44",
                Self::Variant45 => "45",
                Self::Variant46 => "46",
                Self::Variant47 => "47",
                Self::Variant48 => "48",
                Self::Variant49 => "49",
                Self::Variant50 => "50",
                Self::Variant51 => "51",
                Self::Variant52 => "52",
                Self::Variant53 => "53",
                Self::Variant54 => "54",
                Self::Variant55 => "55",
                Self::Variant56 => "56",
                Self::Variant57 => "57",
                Self::Variant58 => "58",
                Self::Variant59 => "59",
                Self::Variant60 => "60",
            }
        )
    }
}
impl Default for TransactionType {
    fn default() -> TransactionType {
        Self::Variant0
    }
}
