/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RestaurantSectionRectangle : Restaurant section rectangle.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RestaurantSectionRectangle {
    /// Color.
    #[serde(rename = "color")]
    pub color: Box<models::Color>,
    /// X coordinate of left point of item.
    #[serde(rename = "x")]
    pub x: i32,
    /// Y coordinate of top point of item.
    #[serde(rename = "y")]
    pub y: i32,
    /// Z-index of item.
    #[serde(rename = "z")]
    pub z: i32,
    /// Item's angle of slope.
    #[serde(rename = "angle")]
    pub angle: f64,
    /// Item's width in px.
    #[serde(rename = "width")]
    pub width: i32,
    /// Item's height in px.
    #[serde(rename = "height")]
    pub height: i32,
}

impl RestaurantSectionRectangle {
    /// Restaurant section rectangle.
    pub fn new(
        color: models::Color,
        x: i32,
        y: i32,
        z: i32,
        angle: f64,
        width: i32,
        height: i32,
    ) -> RestaurantSectionRectangle {
        RestaurantSectionRectangle {
            color: Box::new(color),
            x,
            y,
            z,
            angle,
            width,
            height,
        }
    }
}
