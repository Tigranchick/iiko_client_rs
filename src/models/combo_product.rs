/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ComboProduct : Combo product.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComboProduct {
    /// Product id.
    #[serde(rename = "productId", skip_serializing_if = "Option::is_none")]
    pub product_id: Option<uuid::Uuid>,
    /// Size name. Can be null.
    #[serde(rename = "sizeName", skip_serializing_if = "Option::is_none")]
    pub size_name: Option<String>,
    /// Size id.
    #[serde(
        rename = "sizeId",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub size_id: Option<Option<uuid::Uuid>>,
    /// Forbidden modifiers.
    #[serde(rename = "forbiddenModifiers", skip_serializing_if = "Option::is_none")]
    pub forbidden_modifiers: Option<Vec<uuid::Uuid>>,
    /// Price modification amount.
    #[serde(
        rename = "priceModificationAmount",
        skip_serializing_if = "Option::is_none"
    )]
    pub price_modification_amount: Option<f64>,
}

impl ComboProduct {
    /// Combo product.
    pub fn new() -> ComboProduct {
        ComboProduct {
            product_id: None,
            size_name: None,
            size_id: None,
            forbidden_modifiers: None,
            price_modification_amount: None,
        }
    }
}
