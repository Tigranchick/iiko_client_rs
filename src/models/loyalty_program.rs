/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LoyaltyProgram : Loyalty program.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LoyaltyProgram {
    /// Program id.
    #[serde(
        rename = "id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub id: Option<Option<uuid::Uuid>>,
    /// Program name. Can be null.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Program description. Can be null.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Program works since date.
    #[serde(rename = "serviceFrom", skip_serializing_if = "Option::is_none")]
    pub service_from: Option<String>,
    /// Program works till date.
    #[serde(
        rename = "serviceTo",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub service_to: Option<Option<String>>,
    /// Notify customer when balance has changed (sms/push).
    #[serde(
        rename = "notifyAboutBalanceChanges",
        skip_serializing_if = "Option::is_none"
    )]
    pub notify_about_balance_changes: Option<bool>,
    /// Program type.  <br>0 - deposit or corporate nutrition,<br />1 - bonus program,<br />2 - products program,<br />3 - discount program,<br />4 - certificate program.
    #[serde(rename = "programType", skip_serializing_if = "Option::is_none")]
    pub program_type: Option<models::ProgramType>,
    /// Program is active.
    #[serde(rename = "isActive", skip_serializing_if = "Option::is_none")]
    pub is_active: Option<bool>,
    /// Wallet id. Program has only wallet that means global payment type for customers.
    #[serde(
        rename = "walletId",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub wallet_id: Option<Option<uuid::Uuid>>,
    /// Program marketing campaigns.
    #[serde(rename = "marketingCampaigns", skip_serializing_if = "Option::is_none")]
    pub marketing_campaigns: Option<Vec<models::MarketingCampaignInfo>>,
    /// Program applied organizations.
    #[serde(
        rename = "appliedOrganizations",
        skip_serializing_if = "Option::is_none"
    )]
    pub applied_organizations: Option<Vec<uuid::Uuid>>,
    /// Program template type.  <br>0 - None,<br />1 - BonusProgram,<br />2 - DiscountProgram,<br />3 - NthDishProgram,<br />4 - ManualOrderAnonymousDiscount,<br />5 - AutoOrderAnonymousDiscount,<br />6 - AutoDishAnonymousDiscount,<br />7 - PromotionsProgram,<br />8 - NthDishPromotionsProgram.
    #[serde(rename = "templateType", skip_serializing_if = "Option::is_none")]
    pub template_type: Option<models::EnumsTemplateType>,
    /// Exchange rate for bonuses and real currency.
    #[serde(
        rename = "isExchangeRateEnabled",
        skip_serializing_if = "Option::is_none"
    )]
    pub is_exchange_rate_enabled: Option<bool>,
    /// Refill type with payment.
    #[serde(rename = "refillType", skip_serializing_if = "Option::is_none")]
    pub refill_type: Option<models::EnumsRefillType>,
}

impl LoyaltyProgram {
    /// Loyalty program.
    pub fn new() -> LoyaltyProgram {
        LoyaltyProgram {
            id: None,
            name: None,
            description: None,
            service_from: None,
            service_to: None,
            notify_about_balance_changes: None,
            program_type: None,
            is_active: None,
            wallet_id: None,
            marketing_campaigns: None,
            applied_organizations: None,
            template_type: None,
            is_exchange_rate_enabled: None,
            refill_type: None,
        }
    }
}
