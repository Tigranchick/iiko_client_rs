/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PaymentTypeKind : Payment type kind.
/// Payment type kind.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PaymentTypeKind {
    #[serde(rename = "Unknown")]
    Unknown,
    #[serde(rename = "Cash")]
    Cash,
    #[serde(rename = "Card")]
    Card,
    #[serde(rename = "Credit")]
    Credit,
    #[serde(rename = "Writeoff")]
    Writeoff,
    #[serde(rename = "Voucher")]
    Voucher,
    #[serde(rename = "External")]
    External,
    #[serde(rename = "SmartSale")]
    SmartSale,
    #[serde(rename = "Sberbank")]
    Sberbank,
    #[serde(rename = "Trpos")]
    Trpos,
}

impl std::fmt::Display for PaymentTypeKind {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Unknown => write!(f, "Unknown"),
            Self::Cash => write!(f, "Cash"),
            Self::Card => write!(f, "Card"),
            Self::Credit => write!(f, "Credit"),
            Self::Writeoff => write!(f, "Writeoff"),
            Self::Voucher => write!(f, "Voucher"),
            Self::External => write!(f, "External"),
            Self::SmartSale => write!(f, "SmartSale"),
            Self::Sberbank => write!(f, "Sberbank"),
            Self::Trpos => write!(f, "Trpos"),
        }
    }
}

impl Default for PaymentTypeKind {
    fn default() -> PaymentTypeKind {
        Self::Unknown
    }
}
