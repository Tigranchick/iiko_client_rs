/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RestrictionsOrderItem : Order item.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RestrictionsOrderItem {
    /// Product ID.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Product.
    #[serde(rename = "product")]
    pub product: String,
    /// Amount.
    #[serde(rename = "amount")]
    pub amount: f64,
    /// Modifiers (absolute amount).
    #[serde(rename = "modifiers", skip_serializing_if = "Option::is_none")]
    pub modifiers: Option<Vec<models::RestrictionsOrderItemModifier>>,
}

impl RestrictionsOrderItem {
    /// Order item.
    pub fn new(id: uuid::Uuid, product: String, amount: f64) -> RestrictionsOrderItem {
        RestrictionsOrderItem {
            id,
            product,
            amount,
            modifiers: None,
        }
    }
}
