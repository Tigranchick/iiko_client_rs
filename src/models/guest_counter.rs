/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GuestCounter : Guest counter.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GuestCounter {
    /// Guest id.
    #[serde(rename = "guestId", skip_serializing_if = "Option::is_none")]
    pub guest_id: Option<uuid::Uuid>,
    /// period.
    #[serde(rename = "period", skip_serializing_if = "Option::is_none")]
    pub period: Option<models::EnumsCounter>,
    /// Metric.
    #[serde(rename = "metric", skip_serializing_if = "Option::is_none")]
    pub metric: Option<models::EnumsCounterMetric>,
    /// Value.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<f64>,
}

impl GuestCounter {
    /// Guest counter.
    pub fn new() -> GuestCounter {
        GuestCounter {
            guest_id: None,
            period: None,
            metric: None,
            value: None,
        }
    }
}
