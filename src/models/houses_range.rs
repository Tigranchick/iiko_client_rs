/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// HousesRange : Range of house numbers in the delivery zone.  It can work in two modes:  a) HousesRangeType.SpecificNumbers - list of house numbers. If the house is on this list - it is in the range  b) Rest HousesRangeType. Defines a range of numbers from StartingNumber to MaxNumber.  Since it is necessary to compare numbers - only supports numeric house numbers.  Type determines the admissibility of even/odd numbers.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct HousesRange {
    /// Type of house number range.
    #[serde(rename = "type")]
    pub r#type: models::HousesRangeType,
    /// Starting house number.
    #[serde(rename = "startingNumber")]
    pub starting_number: i32,
    /// Maximum house number.
    #[serde(rename = "maxNumber")]
    pub max_number: i32,
    /// Unlimited range.
    #[serde(rename = "isUnlimitedRange")]
    pub is_unlimited_range: bool,
    /// Specific numbers.
    #[serde(rename = "specificNumbers")]
    pub specific_numbers: Vec<String>,
}

impl HousesRange {
    /// Range of house numbers in the delivery zone.  It can work in two modes:  a) HousesRangeType.SpecificNumbers - list of house numbers. If the house is on this list - it is in the range  b) Rest HousesRangeType. Defines a range of numbers from StartingNumber to MaxNumber.  Since it is necessary to compare numbers - only supports numeric house numbers.  Type determines the admissibility of even/odd numbers.
    pub fn new(
        r#type: models::HousesRangeType,
        starting_number: i32,
        max_number: i32,
        is_unlimited_range: bool,
        specific_numbers: Vec<String>,
    ) -> HousesRange {
        HousesRange {
            r#type,
            starting_number,
            max_number,
            is_unlimited_range,
            specific_numbers,
        }
    }
}
