/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderRegularCustomer {
    /// Customer ID.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Name.
    #[serde(rename = "name")]
    pub name: String,
    /// Last name.
    #[serde(
        rename = "surname",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub surname: Option<Option<String>>,
    /// Comment.
    #[serde(
        rename = "comment",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub comment: Option<Option<String>>,
    /// Sex.
    #[serde(rename = "gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<models::Gender>,
    /// Is client in blacklist.
    #[serde(rename = "inBlacklist", skip_serializing_if = "Option::is_none")]
    pub in_blacklist: Option<bool>,
    /// Reason why client was added to blacklist.
    #[serde(
        rename = "blacklistReason",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub blacklist_reason: Option<Option<String>>,
    /// Date of birth.   > Allowed from version `7.6.1`.
    #[serde(
        rename = "birthdate",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub birthdate: Option<Option<String>>,
    #[serde(rename = "type")]
    pub r#type: String,
}

impl OrderRegularCustomer {
    pub fn new(id: uuid::Uuid, name: String, r#type: String) -> OrderRegularCustomer {
        OrderRegularCustomer {
            id,
            name,
            surname: None,
            comment: None,
            gender: None,
            in_blacklist: None,
            blacklist_reason: None,
            birthdate: None,
            r#type,
        }
    }
}
