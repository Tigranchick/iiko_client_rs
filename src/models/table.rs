/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Table : Table.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Table {
    /// Table ID.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Number of table.
    #[serde(rename = "number")]
    pub number: i32,
    /// Table name specified in the organization settings.
    #[serde(rename = "name")]
    pub name: String,
    /// Seating capacity of the table.
    #[serde(rename = "seatingCapacity")]
    pub seating_capacity: i32,
    /// Last modified time.
    #[serde(rename = "revision")]
    pub revision: i64,
    /// Is table deleted.
    #[serde(rename = "isDeleted")]
    pub is_deleted: bool,
    /// POS table Id.
    #[serde(rename = "posId")]
    pub pos_id: uuid::Uuid,
}

impl Table {
    /// Table.
    pub fn new(
        id: uuid::Uuid,
        number: i32,
        name: String,
        seating_capacity: i32,
        revision: i64,
        is_deleted: bool,
        pos_id: uuid::Uuid,
    ) -> Table {
        Table {
            id,
            number,
            name,
            seating_capacity,
            revision,
            is_deleted,
            pos_id,
        }
    }
}
