/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TableOrderInfo : Order
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TableOrderInfo {
    /// Order ID.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// POS order ID.
    #[serde(
        rename = "posId",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub pos_id: Option<Option<uuid::Uuid>>,
    /// Order external number.
    #[serde(
        rename = "externalNumber",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub external_number: Option<Option<String>>,
    /// Organization ID.                Can be obtained by `/api/1/organizations` operation.
    #[serde(rename = "organizationId")]
    pub organization_id: uuid::Uuid,
    /// Timestamp of most recent order change that took place on iikoTransport server.
    #[serde(rename = "timestamp")]
    pub timestamp: i64,
    /// Order creation status. In case of asynchronous creation, it allows to track the instance an order was validated/created in iikoFront.
    #[serde(rename = "creationStatus")]
    pub creation_status: models::OrderCreationStatus,
    /// Order creation error details.  > Required only if \"creationStatus\"=\"Error\".
    #[serde(
        rename = "errorInfo",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub error_info: Option<Option<Box<models::ErrorInfo>>>,
    /// Order creation details.  > Field is filled up if \"creationStatus\"=\"Success\".
    #[serde(
        rename = "order",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub order: Option<Option<Box<models::TableOrder>>>,
}

impl TableOrderInfo {
    /// Order
    pub fn new(
        id: uuid::Uuid,
        organization_id: uuid::Uuid,
        timestamp: i64,
        creation_status: models::OrderCreationStatus,
    ) -> TableOrderInfo {
        TableOrderInfo {
            id,
            pos_id: None,
            external_number: None,
            organization_id,
            timestamp,
            creation_status,
            error_info: None,
            order: None,
        }
    }
}
