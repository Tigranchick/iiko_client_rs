/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RequestTableOrderCustomer {
    /// Existing customer ID in RMS.   > If null - the phone number and name is searched in database, otherwise the new customer is created in RMS.
    #[serde(
        rename = "id",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub id: Option<Option<uuid::Uuid>>,
    /// Name of customer.  > Required if \"id\" == null.  > Not required if \"id\" specified.
    #[serde(
        rename = "name",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub name: Option<Option<String>>,
    /// Last name.
    #[serde(
        rename = "surname",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub surname: Option<Option<String>>,
    /// Comment.
    #[serde(
        rename = "comment",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub comment: Option<Option<String>>,
    /// Date of birth.
    #[serde(
        rename = "birthdate",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub birthdate: Option<Option<String>>,
    /// Email.
    #[serde(
        rename = "email",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub email: Option<Option<String>>,
    /// Whether customer receives order status notification messages.
    #[serde(
        rename = "shouldReceiveOrderStatusNotifications",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub should_receive_order_status_notifications: Option<Option<bool>>,
    /// Gender.
    #[serde(rename = "gender", skip_serializing_if = "Option::is_none")]
    pub gender: Option<models::Gender>,
    /// Customer phone.  > Required if \"id\" == null.  > Not required if \"id\" specified.
    #[serde(
        rename = "phone",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub phone: Option<Option<String>>,
}

impl RequestTableOrderCustomer {
    pub fn new() -> RequestTableOrderCustomer {
        RequestTableOrderCustomer {
            id: None,
            name: None,
            surname: None,
            comment: None,
            birthdate: None,
            email: None,
            should_receive_order_status_notifications: None,
            gender: None,
            phone: None,
        }
    }
}
