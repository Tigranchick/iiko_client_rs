/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetRestaurantSectionsWorkloadRequest : Request for check restaurant sections workload.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetRestaurantSectionsWorkloadRequest {
    /// Collection of restaurant section ID.                Can be obtained by `/api/1/reserve/available_restaurant_sections` operation.
    #[serde(rename = "restaurantSectionIds")]
    pub restaurant_section_ids: Vec<uuid::Uuid>,
    /// Estimated start time (Local for the terminal). Lower limit.                Order details are stored for 90 days.
    #[serde(rename = "dateFrom")]
    pub date_from: String,
    /// Estimated start time (Local for the terminal). Upper limit.
    #[serde(
        rename = "dateTo",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub date_to: Option<Option<String>>,
}

impl GetRestaurantSectionsWorkloadRequest {
    /// Request for check restaurant sections workload.
    pub fn new(
        restaurant_section_ids: Vec<uuid::Uuid>,
        date_from: String,
    ) -> GetRestaurantSectionsWorkloadRequest {
        GetRestaurantSectionsWorkloadRequest {
            restaurant_section_ids,
            date_from,
            date_to: None,
        }
    }
}
