/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetCombosInfoResponse : Information about combos of organization.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetCombosInfoResponse {
    /// Full combo's specifications.
    #[serde(
        rename = "comboSpecifications",
        skip_serializing_if = "Option::is_none"
    )]
    pub combo_specifications: Option<Vec<models::ComboSpecification>>,
    /// Combo's categories.
    #[serde(rename = "comboCategories", skip_serializing_if = "Option::is_none")]
    pub combo_categories: Option<Vec<models::ComboCategory>>,
    /// Warnings about errors, not blocking loyalty calculation.
    #[serde(rename = "Warnings", skip_serializing_if = "Option::is_none")]
    pub warnings: Option<Vec<models::WarningInfo>>,
}

impl GetCombosInfoResponse {
    /// Information about combos of organization.
    pub fn new() -> GetCombosInfoResponse {
        GetCombosInfoResponse {
            combo_specifications: None,
            combo_categories: None,
            warnings: None,
        }
    }
}
