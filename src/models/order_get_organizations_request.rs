/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderGetOrganizationsRequest : Request for organizations.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderGetOrganizationsRequest {
    /// Organizations IDs which have to be returned. By default - all organizations from apiLogin.                Can be obtained by `/api/1/organizations` operation.
    #[serde(
        rename = "organizationIds",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub organization_ids: Option<Option<Vec<uuid::Uuid>>>,
    /// A sign whether additional information about the organization should be returned (RMS version, country, restaurantAddress, etc.),    or only minimal information should be returned (id and name).
    #[serde(
        rename = "returnAdditionalInfo",
        skip_serializing_if = "Option::is_none"
    )]
    pub return_additional_info: Option<bool>,
    /// Attribute that shows that response contains disabled organizations.
    #[serde(rename = "includeDisabled", skip_serializing_if = "Option::is_none")]
    pub include_disabled: Option<bool>,
    /// External data keys that have to be returned.
    #[serde(
        rename = "returnExternalData",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub return_external_data: Option<Option<Vec<String>>>,
}

impl OrderGetOrganizationsRequest {
    /// Request for organizations.
    pub fn new() -> OrderGetOrganizationsRequest {
        OrderGetOrganizationsRequest {
            organization_ids: None,
            return_additional_info: None,
            include_disabled: None,
            return_external_data: None,
        }
    }
}
