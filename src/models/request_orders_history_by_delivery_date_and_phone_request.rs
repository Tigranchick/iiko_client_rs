/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RequestOrdersHistoryByDeliveryDateAndPhoneRequest : Request for a list of historical orders by phone number.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RequestOrdersHistoryByDeliveryDateAndPhoneRequest {
    /// Delivery order phone number.
    #[serde(rename = "phone")]
    pub phone: String,
    /// Order delivery date (Local for delivery terminal). Lower limit.                Order details are stored for 90 days.
    #[serde(
        rename = "deliveryDateFrom",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub delivery_date_from: Option<Option<String>>,
    /// Order delivery date (Local for delivery terminal). Upper limit.                Order details are stored for 90 days.
    #[serde(
        rename = "deliveryDateTo",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub delivery_date_to: Option<Option<String>>,
    /// Organization ID for which an order search will be performed.                Can be obtained by `/api/1/organizations` operation.
    #[serde(rename = "organizationIds")]
    pub organization_ids: Vec<uuid::Uuid>,
    /// Revision start number beginning from which (but not including) orders will be returned.                > Maximum revision offset to request - `3 hours`.
    #[serde(
        rename = "startRevision",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub start_revision: Option<Option<i64>>,
    /// Source keys.
    #[serde(
        rename = "sourceKeys",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub source_keys: Option<Option<Vec<String>>>,
    /// Maximum number of items returned.                > Maximum numbers of items to request - `200`.
    #[serde(rename = "rowsCount")]
    pub rows_count: i32,
}

impl RequestOrdersHistoryByDeliveryDateAndPhoneRequest {
    /// Request for a list of historical orders by phone number.
    pub fn new(
        phone: String,
        organization_ids: Vec<uuid::Uuid>,
        rows_count: i32,
    ) -> RequestOrdersHistoryByDeliveryDateAndPhoneRequest {
        RequestOrdersHistoryByDeliveryDateAndPhoneRequest {
            phone,
            delivery_date_from: None,
            delivery_date_to: None,
            organization_ids,
            start_revision: None,
            source_keys: None,
            rows_count,
        }
    }
}
