/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RestrictionsAddress :
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RestrictionsAddress {
    /// City.
    #[serde(
        rename = "city",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub city: Option<Option<String>>,
    /// Street.
    #[serde(
        rename = "streetName",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub street_name: Option<Option<String>>,
    /// Street ID.
    #[serde(
        rename = "streetId",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub street_id: Option<Option<uuid::Uuid>>,
    /// House.
    #[serde(
        rename = "house",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub house: Option<Option<String>>,
    /// Building.
    #[serde(
        rename = "building",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub building: Option<Option<String>>,
    /// Post index.
    #[serde(
        rename = "index",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub index: Option<Option<String>>,
    /// Address line 1.  Contains the primary address information.
    #[serde(
        rename = "line1",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub line1: Option<Option<String>>,
    /// Entrance.
    #[serde(
        rename = "entrance",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub entrance: Option<Option<String>>,
}

impl RestrictionsAddress {
    ///
    pub fn new() -> RestrictionsAddress {
        RestrictionsAddress {
            city: None,
            street_name: None,
            street_id: None,
            house: None,
            building: None,
            index: None,
            line1: None,
            entrance: None,
        }
    }
}
