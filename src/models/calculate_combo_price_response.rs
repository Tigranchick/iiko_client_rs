/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CalculateComboPriceResponse : Calculate combo price
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CalculateComboPriceResponse {
    /// Calculated price of combo item.
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<f64>,
    /// Ids of incorrectly filled groups. If not empty - price will be 0.
    #[serde(
        rename = "incorrectlyFilledGroups",
        skip_serializing_if = "Option::is_none"
    )]
    pub incorrectly_filled_groups: Option<Vec<uuid::Uuid>>,
}

impl CalculateComboPriceResponse {
    /// Calculate combo price
    pub fn new() -> CalculateComboPriceResponse {
        CalculateComboPriceResponse {
            price: None,
            incorrectly_filled_groups: None,
        }
    }
}
