/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TransportItemDto {
    #[serde(rename = "itemSizes", skip_serializing_if = "Option::is_none")]
    pub item_sizes: Option<Vec<models::TransportItemSizeDto>>,
    /// Product code
    #[serde(rename = "sku", skip_serializing_if = "Option::is_none")]
    pub sku: Option<String>,
    /// Product name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Product description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "allergenGroups", skip_serializing_if = "Option::is_none")]
    pub allergen_groups: Option<Vec<models::AllergenGroupDto>>,
    /// Product ID
    #[serde(rename = "itemId", skip_serializing_if = "Option::is_none")]
    pub item_id: Option<uuid::Uuid>,
    /// Modifier schema ID
    #[serde(rename = "modifierSchemaId", skip_serializing_if = "Option::is_none")]
    pub modifier_schema_id: Option<uuid::Uuid>,
    #[serde(rename = "taxCategory", skip_serializing_if = "Option::is_none")]
    pub tax_category: Option<Box<models::TaxCategoryDto>>,
    /// Product or compound. Depends on modifiers scheme existence
    #[serde(rename = "orderItemType", skip_serializing_if = "Option::is_none")]
    pub order_item_type: Option<OrderItemType>,
}

impl TransportItemDto {
    pub fn new() -> TransportItemDto {
        TransportItemDto {
            item_sizes: None,
            sku: None,
            name: None,
            description: None,
            allergen_groups: None,
            item_id: None,
            modifier_schema_id: None,
            tax_category: None,
            order_item_type: None,
        }
    }
}
/// Product or compound. Depends on modifiers scheme existence
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OrderItemType {
    #[serde(rename = "Product")]
    Product,
    #[serde(rename = "Compound")]
    Compound,
}

impl Default for OrderItemType {
    fn default() -> OrderItemType {
        Self::Product
    }
}
