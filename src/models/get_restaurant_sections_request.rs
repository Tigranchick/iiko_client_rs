/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetRestaurantSectionsRequest : Request for get all restaurant sections of specified terminal groups, for which banquet/reserve booking are available.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetRestaurantSectionsRequest {
    /// Collection of terminal group ID.                Can be obtained by `/api/1/terminal_groups` operation.
    #[serde(rename = "terminalGroupIds")]
    pub terminal_group_ids: Vec<uuid::Uuid>,
    /// Indicates whether table layout information should be returned...
    #[serde(rename = "returnSchema", skip_serializing_if = "Option::is_none")]
    pub return_schema: Option<bool>,
    /// Last modified time after.
    #[serde(
        rename = "revision",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub revision: Option<Option<i64>>,
}

impl GetRestaurantSectionsRequest {
    /// Request for get all restaurant sections of specified terminal groups, for which banquet/reserve booking are available.
    pub fn new(terminal_group_ids: Vec<uuid::Uuid>) -> GetRestaurantSectionsRequest {
        GetRestaurantSectionsRequest {
            terminal_group_ids,
            return_schema: None,
            revision: None,
        }
    }
}
