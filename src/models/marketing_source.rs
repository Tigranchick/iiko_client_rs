/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MarketingSource : DTO for marketing source in iikoRMS.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketingSource {
    /// Marketing source ID.
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    /// Organization ID.                Can be obtained by `/api/1/organizations` operation.
    #[serde(rename = "organizationId")]
    pub organization_id: uuid::Uuid,
    /// Marketing source name.
    #[serde(rename = "name")]
    pub name: String,
    /// External system revision number.
    #[serde(
        rename = "externalRevision",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub external_revision: Option<Option<i64>>,
    /// IsDeleted attribute of marketing source.
    #[serde(rename = "isDeleted", skip_serializing_if = "Option::is_none")]
    pub is_deleted: Option<bool>,
    /// Attached marketing sources.
    #[serde(rename = "attachedSources")]
    pub attached_sources: Vec<String>,
}

impl MarketingSource {
    /// DTO for marketing source in iikoRMS.
    pub fn new(
        id: uuid::Uuid,
        organization_id: uuid::Uuid,
        name: String,
        attached_sources: Vec<String>,
    ) -> MarketingSource {
        MarketingSource {
            id,
            organization_id,
            name,
            external_revision: None,
            is_deleted: None,
            attached_sources,
        }
    }
}
