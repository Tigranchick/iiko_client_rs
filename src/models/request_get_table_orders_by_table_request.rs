/*
 * iikoCloud API
 *
 * <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RequestGetTableOrdersByTableRequest : Request for information about orders using table IDs.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RequestGetTableOrdersByTableRequest {
    /// Source keys.
    #[serde(
        rename = "sourceKeys",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub source_keys: Option<Option<Vec<String>>>,
    /// Organization ID.                Can be obtained by `/api/1/organizations` operation.
    #[serde(rename = "organizationIds")]
    pub organization_ids: Vec<uuid::Uuid>,
    /// Table IDs.                Can be obtained by `/api/1/reserve/available_restaurant_sections` operation.
    #[serde(rename = "tableIds")]
    pub table_ids: Vec<uuid::Uuid>,
    /// Order statuses.
    #[serde(
        rename = "statuses",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub statuses: Option<Option<Vec<models::OrderStatus>>>,
    /// Order creation date (terminal time zone). Lower limit.                Order details are stored for 90 days.
    #[serde(
        rename = "dateFrom",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub date_from: Option<Option<String>>,
    /// Order creation date (terminal time zone). Upper limit.
    #[serde(
        rename = "dateTo",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub date_to: Option<Option<String>>,
}

impl RequestGetTableOrdersByTableRequest {
    /// Request for information about orders using table IDs.
    pub fn new(
        organization_ids: Vec<uuid::Uuid>,
        table_ids: Vec<uuid::Uuid>,
    ) -> RequestGetTableOrdersByTableRequest {
        RequestGetTableOrdersByTableRequest {
            source_keys: None,
            organization_ids,
            table_ids,
            statuses: None,
            date_from: None,
            date_to: None,
        }
    }
}
